<?php
namespace DataGridTest;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-17 at 11:53:23.
 */
class DataGrid extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \DataGrid\DataGrid
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new \DataGrid\DataGrid();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers DataGrid\DataGrid::getAdapter
     * @expectedException \DataGrid\Exception\InvalidArgumentException
     */
    public function testGetAdapter()
    {
        $this->object->getAdapter();
    }

    /**
     * @covers DataGrid\DataGrid::setRenderer
     */
    public function testSetRenderer()
    {
        $this->object->setRenderer($this->getMock('DataGrid\Renderer\RendererInterface'));
    }

    /**
     * @covers DataGrid\DataGrid::getRenderer
     * @expectedException \DataGrid\Exception\InvalidArgumentException
     */
    public function testGetRenderer()
    {
        $this->object->getRenderer();
    }

    /**
     * @covers DataGrid\DataGrid::toArray
     * @expectedException \DataGrid\Exception\InvalidArgumentException
     */
    public function testToArrayNoAdapter()
    {
        $this->object->toArray();
    }

    /**
     * @covers DataGrid\DataGrid::render
     * @expectedException \DataGrid\Exception\InvalidArgumentException
     */
    public function testRenderFailure()
    {
        $this->object->render();
    }

    /**
     * @covers DataGrid\DataGrid::setSpecialColumn
     */
    public function testSetSpecialColumn()
    {
        $result = $this->object->setSpecialColumn('menage', null);
        $this->assertNull($result);
    }

    /**
     * @covers DataGrid\DataGrid::setSpecialColumns
     * @dataProvider getSpecialColumnsProvider
     */
    public function testSetSpecialColumns($columns)
    {
        $result = $this->object->setSpecialColumns($columns);
        $this->assertNull($result);
        $this->assertInternalType('array', $columns);
    }

    /**
     * @covers DataGrid\DataGrid::getSpecialColumns
     * @dataProvider getSpecialColumnsProvider
     */
    public function testGetSpecialColumns($columns)
    {
        $this->assertInternalType('array', $columns);
        $this->object->setSpecialColumns($columns);
        $result = $this->object->getSpecialColumns();
        $this->assertEquals($columns, $result);
    }

    public function getSpecialColumnsProvider() {
        return array(
            'simple column' => array(
                array(
                    'edit_link' => array(
                        'cell' => '/admin/link/edit',
                        'column' => 'Edit link'
                    )
                )
            ),
        );
    }

    /**
     * @covers DataGrid\DataGrid::getSpecialColumnsByType
     * @expectedException \DataGrid\Exception\InvalidArgumentException
     */
    public function testGetSpecialColumnsByTypeFailure()
    {
        $this->object->getSpecialColumnsByType('non existing type');
    }
}
